//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.8.1
//     from Assets/VERA/VLAT/Assets/Scripts/Input/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine;

public partial class @InputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""VlatControls"",
            ""id"": ""642c6098-82ed-42cf-b600-68fedf660957"",
            ""actions"": [
                {
                    ""name"": ""StickInput"",
                    ""type"": ""Value"",
                    ""id"": ""b986b2ee-57d2-4bd0-920a-8cc321866fc5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Switch1"",
                    ""type"": ""Button"",
                    ""id"": ""031b3c3e-de57-4459-b0d2-907ddecd52c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch2"",
                    ""type"": ""Button"",
                    ""id"": ""acfd4668-68f5-45b6-b94e-6648f08964e8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch3"",
                    ""type"": ""Button"",
                    ""id"": ""f94dfefa-fdc9-46ba-9bbd-c4194e119eb5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch4"",
                    ""type"": ""Button"",
                    ""id"": ""4547a9dd-944c-41c2-96f8-403404c271ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchLevel"",
                    ""type"": ""Button"",
                    ""id"": ""2af11ca3-6f6f-4db7-bc7e-bfd9b4d4d8e1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""07c48c65-5eb3-4c8c-a168-1bd7a3e12df3"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""baedfeab-efb3-4908-9207-85a0c4506683"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab59da45-ea58-4993-98f3-f0f2af720b08"",
                    ""path"": ""<XRController>{LeftHand}/{SecondaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2cbe1365-4ecf-4645-bc3e-42a780683789"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""95ffd873-c177-4c7e-95f8-c251d50dc86d"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5f5b1ad-d33f-4556-a870-9a85c4eb15c5"",
                    ""path"": ""<XRController>{RightHand}/{PrimaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9bd5de82-969a-44d3-8d45-63700450f0e3"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""161f1163-79d4-4f1c-87e0-5f2768f2d612"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""caf7fbdc-9c58-438d-a7c6-75f89d8fc046"",
                    ""path"": ""<XRController>{RightHand}/{SecondaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""74c97900-5384-4e7a-9a7e-1890dc1cbbb7"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b2f6dd5-1f41-4211-b5bc-fc8c6621b3c7"",
                    ""path"": ""<XInputController>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StickInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4fe474ae-2699-4773-afe1-a0c9c9239889"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31bfbb7b-e9a9-4d85-948d-a5b55ed60075"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0f4b86c-42ee-4d57-834d-dad41d7662a2"",
                    ""path"": ""<XRController>{LeftHand}/{PrimaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MovementT2"",
            ""id"": ""3cd2666b-154a-46cd-a24e-e8e32278a342"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""2f8f7c03-4e4f-47a3-8204-856cb6cc6dbf"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LookUp"",
                    ""type"": ""Button"",
                    ""id"": ""563851b5-0d42-4a80-a6d3-79118aae959c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LookDown"",
                    ""type"": ""Button"",
                    ""id"": ""0bddb94d-dc95-4d6b-915e-4ba90cecf135"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""800a2d8a-8605-4eec-81dc-fff13732f987"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""5110997b-b468-44ac-bade-cd3eb24778b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch"",
                    ""type"": ""Button"",
                    ""id"": ""1c0309ce-ad28-47c7-9391-7fbd329e7ad9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4896be0e-1b40-41f1-ac4a-07f638bdd45f"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0186580b-be07-44be-a0a7-46014692df21"",
                    ""path"": ""<Joystick>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0edaa9a-d945-4162-8f97-eb93086f7a2a"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LookUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b111663f-b438-4ae4-9c95-592489ea923b"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LookDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e92ed35-54dc-4fee-bbbd-95b7c1244fd6"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea0bc520-a8b6-401a-bdfd-90267d6cd29f"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d03fa16-9703-4b4a-9aa9-12603043be27"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // VlatControls
        m_VlatControls = asset.FindActionMap("VlatControls", throwIfNotFound: true);
        m_VlatControls_StickInput = m_VlatControls.FindAction("StickInput", throwIfNotFound: true);
        m_VlatControls_Switch1 = m_VlatControls.FindAction("Switch1", throwIfNotFound: true);
        m_VlatControls_Switch2 = m_VlatControls.FindAction("Switch2", throwIfNotFound: true);
        m_VlatControls_Switch3 = m_VlatControls.FindAction("Switch3", throwIfNotFound: true);
        m_VlatControls_Switch4 = m_VlatControls.FindAction("Switch4", throwIfNotFound: true);
        m_VlatControls_SwitchLevel = m_VlatControls.FindAction("SwitchLevel", throwIfNotFound: true);
        // MovementT2
        m_MovementT2 = asset.FindActionMap("MovementT2", throwIfNotFound: true);
        m_MovementT2_Movement = m_MovementT2.FindAction("Movement", throwIfNotFound: true);
        m_MovementT2_LookUp = m_MovementT2.FindAction("LookUp", throwIfNotFound: true);
        m_MovementT2_LookDown = m_MovementT2.FindAction("LookDown", throwIfNotFound: true);
        m_MovementT2_Interact = m_MovementT2.FindAction("Interact", throwIfNotFound: true);
        m_MovementT2_Menu = m_MovementT2.FindAction("Menu", throwIfNotFound: true);
        m_MovementT2_Switch = m_MovementT2.FindAction("Switch", throwIfNotFound: true);
    }

    ~@InputActions()
    {
        Debug.Assert(!m_VlatControls.enabled, "This will cause a leak and performance issues, InputActions.VlatControls.Disable() has not been called.");
        Debug.Assert(!m_MovementT2.enabled, "This will cause a leak and performance issues, InputActions.MovementT2.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // VlatControls
    private readonly InputActionMap m_VlatControls;
    private List<IVlatControlsActions> m_VlatControlsActionsCallbackInterfaces = new List<IVlatControlsActions>();
    private readonly InputAction m_VlatControls_StickInput;
    private readonly InputAction m_VlatControls_Switch1;
    private readonly InputAction m_VlatControls_Switch2;
    private readonly InputAction m_VlatControls_Switch3;
    private readonly InputAction m_VlatControls_Switch4;
    private readonly InputAction m_VlatControls_SwitchLevel;
    public struct VlatControlsActions
    {
        private @InputActions m_Wrapper;
        public VlatControlsActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @StickInput => m_Wrapper.m_VlatControls_StickInput;
        public InputAction @Switch1 => m_Wrapper.m_VlatControls_Switch1;
        public InputAction @Switch2 => m_Wrapper.m_VlatControls_Switch2;
        public InputAction @Switch3 => m_Wrapper.m_VlatControls_Switch3;
        public InputAction @Switch4 => m_Wrapper.m_VlatControls_Switch4;
        public InputAction @SwitchLevel => m_Wrapper.m_VlatControls_SwitchLevel;
        public InputActionMap Get() { return m_Wrapper.m_VlatControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(VlatControlsActions set) { return set.Get(); }
        public void AddCallbacks(IVlatControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_VlatControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_VlatControlsActionsCallbackInterfaces.Add(instance);
            @StickInput.started += instance.OnStickInput;
            @StickInput.performed += instance.OnStickInput;
            @StickInput.canceled += instance.OnStickInput;
            @Switch1.started += instance.OnSwitch1;
            @Switch1.performed += instance.OnSwitch1;
            @Switch1.canceled += instance.OnSwitch1;
            @Switch2.started += instance.OnSwitch2;
            @Switch2.performed += instance.OnSwitch2;
            @Switch2.canceled += instance.OnSwitch2;
            @Switch3.started += instance.OnSwitch3;
            @Switch3.performed += instance.OnSwitch3;
            @Switch3.canceled += instance.OnSwitch3;
            @Switch4.started += instance.OnSwitch4;
            @Switch4.performed += instance.OnSwitch4;
            @Switch4.canceled += instance.OnSwitch4;
            @SwitchLevel.started += instance.OnSwitchLevel;
            @SwitchLevel.performed += instance.OnSwitchLevel;
            @SwitchLevel.canceled += instance.OnSwitchLevel;
        }

        private void UnregisterCallbacks(IVlatControlsActions instance)
        {
            @StickInput.started -= instance.OnStickInput;
            @StickInput.performed -= instance.OnStickInput;
            @StickInput.canceled -= instance.OnStickInput;
            @Switch1.started -= instance.OnSwitch1;
            @Switch1.performed -= instance.OnSwitch1;
            @Switch1.canceled -= instance.OnSwitch1;
            @Switch2.started -= instance.OnSwitch2;
            @Switch2.performed -= instance.OnSwitch2;
            @Switch2.canceled -= instance.OnSwitch2;
            @Switch3.started -= instance.OnSwitch3;
            @Switch3.performed -= instance.OnSwitch3;
            @Switch3.canceled -= instance.OnSwitch3;
            @Switch4.started -= instance.OnSwitch4;
            @Switch4.performed -= instance.OnSwitch4;
            @Switch4.canceled -= instance.OnSwitch4;
            @SwitchLevel.started -= instance.OnSwitchLevel;
            @SwitchLevel.performed -= instance.OnSwitchLevel;
            @SwitchLevel.canceled -= instance.OnSwitchLevel;
        }

        public void RemoveCallbacks(IVlatControlsActions instance)
        {
            if (m_Wrapper.m_VlatControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IVlatControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_VlatControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_VlatControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public VlatControlsActions @VlatControls => new VlatControlsActions(this);

    // MovementT2
    private readonly InputActionMap m_MovementT2;
    private List<IMovementT2Actions> m_MovementT2ActionsCallbackInterfaces = new List<IMovementT2Actions>();
    private readonly InputAction m_MovementT2_Movement;
    private readonly InputAction m_MovementT2_LookUp;
    private readonly InputAction m_MovementT2_LookDown;
    private readonly InputAction m_MovementT2_Interact;
    private readonly InputAction m_MovementT2_Menu;
    private readonly InputAction m_MovementT2_Switch;
    public struct MovementT2Actions
    {
        private @InputActions m_Wrapper;
        public MovementT2Actions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_MovementT2_Movement;
        public InputAction @LookUp => m_Wrapper.m_MovementT2_LookUp;
        public InputAction @LookDown => m_Wrapper.m_MovementT2_LookDown;
        public InputAction @Interact => m_Wrapper.m_MovementT2_Interact;
        public InputAction @Menu => m_Wrapper.m_MovementT2_Menu;
        public InputAction @Switch => m_Wrapper.m_MovementT2_Switch;
        public InputActionMap Get() { return m_Wrapper.m_MovementT2; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovementT2Actions set) { return set.Get(); }
        public void AddCallbacks(IMovementT2Actions instance)
        {
            if (instance == null || m_Wrapper.m_MovementT2ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MovementT2ActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @LookUp.started += instance.OnLookUp;
            @LookUp.performed += instance.OnLookUp;
            @LookUp.canceled += instance.OnLookUp;
            @LookDown.started += instance.OnLookDown;
            @LookDown.performed += instance.OnLookDown;
            @LookDown.canceled += instance.OnLookDown;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @Menu.started += instance.OnMenu;
            @Menu.performed += instance.OnMenu;
            @Menu.canceled += instance.OnMenu;
            @Switch.started += instance.OnSwitch;
            @Switch.performed += instance.OnSwitch;
            @Switch.canceled += instance.OnSwitch;
        }

        private void UnregisterCallbacks(IMovementT2Actions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @LookUp.started -= instance.OnLookUp;
            @LookUp.performed -= instance.OnLookUp;
            @LookUp.canceled -= instance.OnLookUp;
            @LookDown.started -= instance.OnLookDown;
            @LookDown.performed -= instance.OnLookDown;
            @LookDown.canceled -= instance.OnLookDown;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @Menu.started -= instance.OnMenu;
            @Menu.performed -= instance.OnMenu;
            @Menu.canceled -= instance.OnMenu;
            @Switch.started -= instance.OnSwitch;
            @Switch.performed -= instance.OnSwitch;
            @Switch.canceled -= instance.OnSwitch;
        }

        public void RemoveCallbacks(IMovementT2Actions instance)
        {
            if (m_Wrapper.m_MovementT2ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMovementT2Actions instance)
        {
            foreach (var item in m_Wrapper.m_MovementT2ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MovementT2ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MovementT2Actions @MovementT2 => new MovementT2Actions(this);
    public interface IVlatControlsActions
    {
        void OnStickInput(InputAction.CallbackContext context);
        void OnSwitch1(InputAction.CallbackContext context);
        void OnSwitch2(InputAction.CallbackContext context);
        void OnSwitch3(InputAction.CallbackContext context);
        void OnSwitch4(InputAction.CallbackContext context);
        void OnSwitchLevel(InputAction.CallbackContext context);
    }
    public interface IMovementT2Actions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnLookUp(InputAction.CallbackContext context);
        void OnLookDown(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
        void OnSwitch(InputAction.CallbackContext context);
    }
}
